<% query  ||= @query %>
<% issues ||= @issues %>

<% list_id ||= 'issues_list' %>
<% from_sprint ||= 'issues_list' %>

<% hierarchy = (list_id == 'issues_list') %>

<script type='text/javascript'>
	$(function() {
	  $('.subject-tipsy').tipsy();
	  default_issue_target_version = "<%=@issue.try(:fixed_version).try(:id)%>";
	  clear_form_elements($(".inline-issue-add"));	
    
	$('.subject-contents').cluetip({
		splitTitle: '|',
		positionBy: 'mouse',
		sticky: true,
		// mouseOutClose: true,
		closeText: 'X',
		closePosition: 'title',
		topOffset: -3,
		width: 'auto',
		fx: {
	            open:       'fadeIn', // can be 'show' or 'slideDown' or 'fadeIn'
	            openSpeed:  'fast'
	  	},
	  	clickThrough:     true,
	    hoverIntent: {
	                    sensitivity:  3,
	                    interval:     1000,
	                    timeout:      0
	    	}
		});
	
	});
</script>


<%if hierarchy%>
	<%= link_to_function(l(:button_collapse_all), "collapseAllRowGroups($('.expander')[0]); $('.issue.parent').removeClass('open');", :class => 'toggle-all') %>
	<%= " / " %>
	<%= link_to_function(l(:button_expand_all), "expandAllRowGroups($('.expander')[0]); $('.issue.parent').addClass('open');", :class => 'toggle-all') %>
<%end%>

<%= form_tag('', {:id => 'context_menu_form'}) do -%>
  <%= hidden_field_tag 'back_url', url_for(build_params_for_context_menu) %>
<% end %>
<div class="autoscroll">

<% if issues.length > 0 %>
	<%= hidden_field_tag("first_index", issues.first[:position]) %>
<% else %>
	<%= hidden_field_tag("first_index", 0) %>
<%- end %>

<table id='issue-table' class="list issues sprint-<%= from_sprint %>">
    <thead>
    	<tr>
    	
    	<% if hierarchy %>	
        <th class="checkbox hide-when-print">
        	<%= link_to image_tag('toggle_check.png'), {}, :onclick => 'toggleScrumIssuesSelection(); return false;',
											:title => "#{l(:button_check_all)}/#{l(:button_uncheck_all)}" %>
        </th>
        <% end %>
        
        <% query.columns.each do |column| %>
		  <% next if(column.name == :id) %>
          <%= column_short_header(column) %>
        <% end %>
        <th>Actions</th>
			</tr>
		</thead>
	<% previous_group = false %>
	<tbody sort='<%=@sort_criteria.first_key%>'>
	<% if issues.length > 0 %>
		<% issues.each do |issue| -%>
		  	<% level = issue[:level] -%>
			<%= render :partial => "scrum_userstories/issue_row", :locals => {:issue => issue, :hierarchy => hierarchy, :query => query, :level => level, :list_id => list_id, :from_sprint => from_sprint} %>
			<% if scrum_user_stories_add_inline || scrum_user_stories_manipulate_inline %>
  			<tr id='placeholder-<%=issue["id"]%>' level="<%= (level + 1).to_s %>">
  				<td colspan="9">
  					<div id="issue-<%= issue["id"]%>-inline-child" class='inline_child_container'></div>
  				</td>	
  			</tr>
			<% end%>
		<% end -%>
	<% else %>
		<tr id="empty_issues" level="0" class="us-issue hascontextmenu odd issue priority-1 created-by-me">
			<td height="30" colspan="20" align="center"><b>No issues in this sprint</b></td>
		</tr>
	<% end %>
	</tbody>
</table>
</div>
<% unless hierarchy %>
	<script>
		$('span.expander').css('display','none');
		$('.prefix > span').css('display','none');
		if (typeof(init_sortable) == 'function')
			init_sortable();
	</script>
<% end %>

<script>
  var authenticity_token = '<%= form_authenticity_token %>';
  
  function enableInlineEdit(){
    $(".sprint-<%=from_sprint%> .story_size-container").editable('<%= url_for(:controller => :scrum_userstories, :action => :update_single_field, :params => {:project_id => @project.id, :hierarchy => hierarchy, :query => query, :list_id => list_id, :from_sprint => from_sprint}).html_safe %>',
      {
        onblur     : 'submit',
        placeholder: '<span class="edit-placeholder">Edit</span>',
        submitdata : {
                        authenticity_token : authenticity_token
                     },
        indicator  : '<%= image_tag 'loading.gif'%>' ,
        data: function(value, settings) {
          toReturn = "{<%= storysize_possible_values.html_safe %> " +"'selected':'" + value + "'}";
          return toReturn;
        },
        type: 'select',
        ignoreResponse: true
      }); 
  
    $('.sprint-<%=from_sprint%> .edit').editable('<%= url_for(:controller => :scrum_userstories, :action => :update_single_field, :params => {:project_id => @project.id, :hierarchy => hierarchy, :query => query, :list_id => list_id, :from_sprint => from_sprint}).html_safe %>',
      {
        onblur     : 'submit',
        placeholder: '<span class="edit-placeholder">Edit</span>',
        submitdata : {
                        authenticity_token : authenticity_token
                     },
        indicator  : '<%= image_tag 'loading.gif'%>' ,
        data: function(value, settings) {
          return $(this).hasClass("addition") ? "+0" : value;
        },
        ignoreResponse: true
      });
  
    $('.sprint-<%= from_sprint %> div.status').editable('<%= url_for(:controller => :scrum_userstories, :action => :update_single_field, :params => {:project_id => @project.id, :hierarchy => hierarchy, :query => query, :list_id => list_id, :from_sprint => from_sprint}).html_safe %>',
      {
        onblur     : 'submit',
        submitdata : {
                        authenticity_token : authenticity_token
                     },
        indicator  : '<%= image_tag 'loading.gif'%>' ,
        data: function(value, settings) {
          return $(this).attr('data-statuses');
        },
        type: 'select',
        ignoreResponse: true
    }); 
  }
  
  enableInlineEdit();

</script>


