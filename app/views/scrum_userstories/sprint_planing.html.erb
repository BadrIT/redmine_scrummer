<% content_for :header_tags do %>
    <%= stylesheet_link_tag 'general', :plugin => 'redmine_scrummer' %>
    <%= stylesheet_link_tag 'tipsy', :plugin => 'redmine_scrummer' %>
    <%= stylesheet_link_tag 'sidebar', :plugin => 'redmine_scrummer' %>
    <%= stylesheet_link_tag 'jquery-ui.css', :plugin => 'redmine_scrummer' %>
    <%= stylesheet_link_tag 'jquery.cluetip.css', :plugin => 'redmine_scrummer' %>
    <%= javascript_tag "var task_tracker_id = #{Tracker.scrum_task_tracker.id}"%>    
    <%= javascript_include_tag 'jquery-1.6.1.js', :plugin => 'redmine_scrummer' %>
    <%= javascript_include_tag 'jquery.jeditable.js', :plugin => 'redmine_scrummer' %>
    <%= javascript_tag "$.noConflict(); $j = jQuery;"%>
    <%= javascript_include_tag 'context_menu.js'%>
    
    <%= javascript_include_tag 'scrum_shared', :plugin => 'redmine_scrummer' %>
    <%= javascript_include_tag 'jquery.tipsy.js', :plugin => 'redmine_scrummer' %>
    <%= javascript_include_tag 'jquery.sidebar.js', :plugin => 'redmine_scrummer' %>
    <%= javascript_include_tag 'jquery-ui.min.js', :plugin => 'redmine_scrummer' %>
    <%= javascript_include_tag 'jquery.cluetip.js', :plugin => 'redmine_scrummer' %>
    <%= javascript_include_tag 'jquery.cluetip.min.js', :plugin => 'redmine_scrummer' %>
    <%= javascript_include_tag 'jquery.hoverIntent.js', :plugin => 'redmine_scrummer' %>
    
<% end %>
<h2>Sprint Planning</h2>

<!--Sprints stacked vertically-->
<div id='right-side-panel' >
	
	<fieldset id="inline-add" class="collapsible collapsed">
		<legend onclick="toggleFieldset(this);"><%= l(:label_version_new) %></legend>
		<div id='inline_add_container' style="display:none">
			<%= render :partial => 'scrum_userstories/inline_add_version'%>
		</div>
	</fieldset>
	
	<div id='sprints'>
		<%= render(:partial => "sprint", :collection => @sprints) %>
	</div>
</div>

<!--backlog filters-->
<%= backlog_filter nil, "All"%>
<%= backlog_filter Tracker.scrum_user_story_tracker.id, "User-Stories" %> 
<%= backlog_filter Tracker.scrum_defect_tracker.id, "Defects"%> 
<%= backlog_filter Tracker.scrum_defectsuite_tracker.id, "Defect-Suites" %>
  
<!--listing nil-version issues-->
<div id= 'backlog'>
	<%= render :partial => 'scrum_userstories/list', :locals => {:issues => @backlog_issues, :query => @query, :hierarchy => false, :list_id => 'backlog'} %>
</div>


<script>
	function init_planning(){
		$j('.sprint-info').click(function() {
			$(this).next().toggle('slow');
			return false;
		}).next().hide();
		
		$j('.sprint-info')[0].next().show('slow');
		
		$j('tr.issue').draggable({
			helper: 'clone',
			revert: 'invalid',
			appendTo: 'body',
			drag: function(){
					$j(this).hide('slow');
			},
			stop: function(){
					$j(this).show('slow');
					
					// update the status of each sprint
					update_sprint_status();
				}
		});
		
		$j('.sprint , #backlog').droppable({
			drop: function(){
				// get the dragged row id (e.g. 'issue-5')
				var  id = $j('.ui-draggable-dragging')[0].id;
				
				// prevent sending request if the issue dropped in the same place
				if ($j('.autoscroll > table > tbody > tr#'+id,this).size() != 0)
					return;
				
				// append the row and the inline-place-holder to the new table
				var tr = $j('#'+id+' + tr');
				$j('.autoscroll > table',this).append($j('#'+id));
				$j('.autoscroll > table',this).append(tr);
				
				// update row actions to fit the new table.
				var list_id = $j(this)[0].id.toString();
				$j('.issue-actions > a', $j('#'+id)).each(function(){
					var request = $j(this).attr('onclick');
					request = request.replace(/list_id=[^\']*/,"list_id="+list_id);
					$j(this).attr('onclick',request);
				});
	
				// changing the fixed-version of the issue ussing AJAX request
				var url = '<%= url_for :action => :update_single_field, :params => {:project_id => @project.id}%>'
				new Ajax.Request(url,{
					parameters:{
						id: id +"-version",
						value:this.id
						},
					method: 'post',
					asynchronous:true
				});
			}
			
		});
	}
	
	function update_sprint_status(){
		$j('.sprint').each(function(){
			var size = 0;
			var cf_1 = $j('.autoscroll > table > tbody > tr.issue .cf_1', this);
			$j('span , div',cf_1).each(function(){
				size += parseInt($j(this).html());
			});
			var buffer_size = parseInt($j(this).prev().attr('buffer-size'))
			var status = Math.round((size / buffer_size) * 1000) / 10;
			var statusHTML = "" + size + "/" + buffer_size;
			
			$j('.status-bar', $j(this).prev()).progressbar({value:  status});
			$j('.size', $j(this).prev()).html(statusHTML);
		});
	}
	
	update_sprint_status();
	init_planning();
</script>